setwd("/home/lfr/my_prepare/lfr_finally/Breastcancer_EMBOJ/")
library(Seurat)
library(tidyverse)
library(patchwork)
library(data.table)
#
## 读取数据
dir = c('rawdata/ER_P1/',
        'rawdata/ER_P114/',
        'rawdata/ER_P125/',
        'rawdata/ER_P151/',
        'rawdata/ER_P163/',
        'rawdata/ER_P25/',
        'rawdata/ER_P291/',
        'rawdata/ER_P292/',
        'rawdata/ER_P32/',
        'rawdata/ER_P360/',
        'rawdata/ER_P42/', #ER
        'rawdata/Her2_161/',
        'rawdata/Her2_176/',
        'rawdata/Her2_308/',
        'rawdata/Her2_31/',
        'rawdata/Her2_337/',
        'rawdata/Her2_69/', #HER2
        'rawdata/N0019/',
        'rawdata/N0092/',
        'rawdata/N123/',
        'rawdata/N169/',
        'rawdata/N21/',
        'rawdata/N230/',
        'rawdata/N233/',
        'rawdata/N275/',
        'rawdata/N288/',
        'rawdata/N342/',
        'rawdata/N372/',
        'rawdata/N64/',
        'rawdata/N93/',#Normal
        'rawdata/TNBC_106/',
        'rawdata/TNBC_114/',
        'rawdata/TNBC_126/',
        'rawdata/TNBC_135/' #TNBC
) #34个样本

names(dir) = c('ER_P1',
               'ER_P114',
               'ER_P125',
               'ER_P151',
               'ER_P163',
               'ER_P25',
               'ER_P291',
               'ER_P292',
               'ER_P32',
               'ER_P360',
               'ER_P42', #ER组
               'HER2_P161',
               'HER2_P176',
               'HER2_P308',
               'HER2_P31',
               'HER2_P337',
               'HER2_P69', #HER2组
               'N0019_P',
               'N0092_P',
               'N123_P',
               'N169_P',
               'N21_P',
               'N230_P',
               'N233_P',
               'N275_P',
               'N288_P',
               'N342_P',
               'N372_P',
               'N64_P',
               'N93_P', #Normal
               'TNBC_P106',
               'TNBC_P114',
               'TNBC_P126',
               'TNBC_P135' #TNBC
               
)
list.files(dir)
counts=list()
BC=list()


## 创建Seruat对象
for (i in 1:length(dir)){
  # i=1
  counts[[i]] <- Read10X(data.dir = dir[i])
  BC[[i]] <- CreateSeuratObject(counts = counts[[i]], 
                                project = "BreastCancer", 
                                min.cells = 3  # min.cell
  ) # min.features
}
head(BC[[1]]@meta.data)
head(BC[[3]]@meta.data)
head(BC[[12]]@meta.data)
BC[[1]]@meta.data[1:4,1:3]
# 
length(rownames(BC[[1]]@meta.data)) 
length(rownames(BC[[2]]@meta.data)) 
#
sce.all=merge(x=BC[[1]],y=c(BC[[2]],BC[[3]],BC[[4]],BC[[5]],BC[[6]],BC[[7]],BC[[8]],BC[[9]],
                            BC[[10]],BC[[11]],BC[[12]],BC[[13]],BC[[14]],BC[[15]],BC[[16]]
                            ,BC[[17]],BC[[18]],BC[[19]],BC[[20]],BC[[21]],BC[[22]],BC[[23]]
                            ,BC[[24]],BC[[25]],BC[[26]],BC[[27]],BC[[28]],BC[[29]],BC[[30]]
                            ,BC[[31]],BC[[32]],BC[[33]],BC[[34]]))
# 26320 features across 204332 samples within 1 assay
# 改一下meta信息
meta=sce.all@meta.data
colnames(meta)[1]="tissue"
meta$t1=str_split_fixed(rownames(meta),"_",n=3)[,1]
table(meta$t1)
meta$t2=str_split_fixed(rownames(meta),"_",n=3)[,2]
table(meta$t2)
meta$orig.ident=paste0(meta$t1,"_",meta$t2)
table(meta$orig.ident)
sce.all@meta.data=meta
table(sce.all$orig.ident)
#
# 增加一列信息，样本来源，把N开头的都改成Normal
#
sce.all$Tissue=sce.all$tissue
sce.all$Tissue[which(str_detect(sce.all$tissue, "^N"))] <- "Normal"
table(sce.all$Tissue)
#
saveRDS(sce.all,file = "new_analyse_24_4_17/sce_质控前.rds")
#

#计算线粒体基因比例
# 人和鼠的基因名字稍微不一样 
mito_genes=rownames(sce.all)[grep("^MT-", rownames(sce.all))] ## 这里为啥不叫MT,因为用MT查找发现是空的
mito_genes #13个线粒体基因
#mito_genes=rownames(sce.all)[grep("^MT-", rownames(sce.all))] 
sce.all=PercentageFeatureSet(sce.all, "^MT-", col.name = "percent_mito")
fivenum(sce.all@meta.data$percent_mito)
#计算核糖体基因比例
ribo_genes=rownames(sce.all)[grep("^Rp[sl]", rownames(sce.all),ignore.case = T)] #ignore.case = T不区分大小写
ribo_genes
sce.all=PercentageFeatureSet(sce.all, "^RP[SL]", col.name = "percent_ribo")
fivenum(sce.all@meta.data$percent_ribo)
#计算红血细胞基因比例
hb_genes=rownames(sce.all)[grep("^Hb[^(p)]", rownames(sce.all),ignore.case = T)]
hb_genes
sce.all=PercentageFeatureSet(sce.all, "^HB[^(P)]", col.name = "percent_hb")
fivenum(sce.all@meta.data$percent_hb)
#可视化细胞的上述比例情况
feats <- c("nFeature_RNA", "nCount_RNA", "percent_mito", "percent_ribo", "percent_hb")
feats <- c("nFeature_RNA", "nCount_RNA")
p1=VlnPlot(sce.all, group.by = "orig.ident", features = feats, pt.size = 0.01, ncol = 2,raster=FALSE) + 
  NoLegend()
p1
library(ggplot2) 
# ggsave(filename="Vlnplot1.png",plot=p1,width = 40)
feats <- c("percent_mito", "percent_ribo", "percent_hb")
p2=VlnPlot(sce.all, group.by = "orig.ident", features = feats, pt.size = 0.01, ncol = 3, same.y.lims=T,raster=FALSE) + 
  scale_y_continuous(breaks=seq(0, 100, 5)) +
  NoLegend()
p2 
# ggsave(filename="Vlnplot2.pdf",plot=p2,width = 40,height = 20)

p3=FeatureScatter(sce.all, "nCount_RNA", "nFeature_RNA", group.by = "orig.ident", pt.size = 0.5,raster=FALSE)
ggsave(filename="Scatterplot.pdf",plot=p3)
#根据上述指标，过滤低质量细胞/基因
#过滤指标1:最少表达基因数的细胞&最少表达细胞数的基因
selected_c <- WhichCells(sce.all, expression = nFeature_RNA <= 6000) # 细胞
selected_f <- rownames(sce.all)[Matrix::rowSums(sce.all@assays$RNA@counts > 0 ) > 3] #基因
selected_e <- WhichCells(sce.all, expression = nFeature_RNA >= 100)

sce.all.filt <- subset(sce.all, features = selected_f, cells = selected_c)
sce.all.filt <- subset(sce.all.filt,cells = selected_e)
selected_mito <- WhichCells(sce.all.filt, expression = percent_mito < 50)
selected_hb <- WhichCells(sce.all.filt, expression = percent_hb < 5)
length(selected_hb) #16569
length(selected_mito) #16291
# # 这是根据mito,ribo,hb过滤的细胞，但是发现如果ribo也这样过滤，一下就过滤了一半的细胞，所以下面就没过滤
# 
sce.all.filt <- subset(sce.all.filt, cells = selected_mito)
sce.all.filt <- subset(sce.all.filt, cells = selected_hb)
dim(sce.all.filt) 
sce.all.filt <- sce.all.filt[!grepl("^Rp[sl]", rownames(sce.all.filt),ignore.case = T), ]
sce.all.filt <- sce.all.filt[!grepl("^MT-", rownames(sce.all.filt),ignore.case = T), ]
saveRDS(sce.all.filt,file = "new_analyse_24_4_17/sce_primary_er_her2_tnbc_normal_lastFilter_24_4_17.rds")




###### 初次分大群 ####
sce <- readRDS("~/my_prepare/lfr_finally/Breastcancer_EMBOJ/new_analyse_24_4_17/sce_primary_er_her2_tnbc_normal_lastFilter_24_4_17.rds")
sce <- NormalizeData(sce, normalization.method =  "LogNormalize", 
                     scale.factor = 10000)
GetAssay(sce,assay = "RNA")
sce <- FindVariableFeatures(sce, 
                            selection.method = "vst", nfeatures = 3000) 
sce <- ScaleData(sce) 
sce <- RunPCA(object = sce, pc.genes = VariableFeatures(sce)) 
res.used <- 1.0
ElbowPlot(sce,ndims = 50)
sce <- FindNeighbors(sce, dims = 1:20)
sce <- FindClusters(object = sce, verbose = T, resolution = res.used)
# sce <- FindClusters(object = sce, verbose = T, resolution = 0.5)
set.seed(123)
sce <- RunUMAP(object = sce, dims = 1:20, do.fast = TRUE)
sce <- RunTSNE(object = sce, dims = 1:20, do.fast = TRUE)
# DimPlot(sce,reduction = "umap",label=T,raster=FALSE)
# DimPlot(sce,reduction = "umap",label=T, group.by = "orig.ident")
table(sce@meta.data$seurat_clusters) 

p1=DimPlot(sce,group.by = "seurat_clusters",label = T,raster=FALSE)
p2=DimPlot(sce,group.by = "orig.ident",label = T,raster=FALSE)+NoLegend()
p3=DimPlot(sce,group.by = "Tissue",label = T,raster=FALSE)
p1+p2+p3

p1=DimPlot(sce,group.by = "seurat_clusters",label = T,raster=FALSE,reduction = "tsne")
p2=DimPlot(sce,group.by = "orig.ident",label = T,raster=FALSE,reduction = "tsne")+NoLegend()
p3=DimPlot(sce,group.by = "Tissue",label = T,raster=FALSE,reduction = "tsne")
p1+p2+p3

# 看着还是有不小的批次
# 注释看看
th=theme(axis.text.x = element_text(angle = 90, 
                                    vjust = 0.5, hjust=0.5))  

p <- DotPlot(sce, features = all_nonimmune,
             assay='RNA')+  th

p
# 注释一下
celltype=data.frame(ClusterID=0:48,
                    celltype="Epithelials") 
celltype[celltype$ClusterID %in% c(3,32),2]='Edothelials'  #淋巴管内皮
celltype[celltype$ClusterID %in% c(0,8,39,41),2]='T_NK'  # 动脉内皮
celltype[celltype$ClusterID %in% c(23),2]='Naive_Bcells' # 毛细血管内皮

celltype[celltype$ClusterID %in% c(22,48),2]='Plasma_Bcells' # 静脉内皮

celltype[celltype$ClusterID %in% c(14,16,38),2]='Myeloids' 
celltype[celltype$ClusterID %in% c(40),2]='Mast' 
celltype[celltype$ClusterID %in% c(6,9,13,30,46),2]='Fibroblasts'
celltype[celltype$ClusterID %in% c(34),2]='Myepithelials' # 即epi+fib
celltype[celltype$ClusterID %in% c(19),2]='Undefined'
celltype[celltype$ClusterID %in% c(1,2,4,5,7,10,11,12,15,17,18,20,21,24,25,26,27,28,29,
                                   31,33,35,36,37,42,43,44,45,47),2]='Epithelials' 

head(celltype)
celltype 
table(celltype$celltype)
sce@meta.data$firstannotation = "NA"
for(i in 1:nrow(celltype)){
  sce@meta.data[which(sce@meta.data$seurat_clusters == celltype$ClusterID[i]),'firstannotation'] <- celltype$celltype[i]}
table(sce@meta.data$firstannotation)
saveRDS(sce,file = "new_analyse_24_4_17/sce_primary_er_her2_tnbc_normal_第一次注释_24_4_18.rds")






head(sce,2)
Idents(sce)=sce$firstannotation_modify
# get_metadata函数中是使用metadata$Cluster<-seu_obj@active.ident提取亚群的注释信息，所以在我们注释完单细胞亚群之后，记得使Idents(sce)=sce$celltype让active.ident变为注释完的细胞亚群名字
# 绘制细胞分群圈图
###Check and see the meta data info on your Seurat object
colnames(sce@meta.data)  

# 这里可以切换tsne/umap
source("../出图_24_9_3/plot_circlize.R")

###Prepare data for ploting
circ_data <- prepare_circlize_data(sce, scale = 0.8 )
colnames(circ_data)
#
set.seed(1234)
#
#设置需要的颜色
mycolors <-c('#E64A35','#4DBBD4' ,'#01A187'  ,'#6BD66B','#3C5588'  ,'#F29F80'  ,
             '#7F2268','#91D0C1','#bebcdf')
mycolors <-c('#E64A35','#4DBBD4' ,'#01A187'  ,'#6BD66B','#3C5588'  ,'#F29F80'  ,
             '#7F2268','#91D0C1','#FFCC4F')

cluster_colors<-mycolors
group_colors<-rand_color(length(names(table(sce$Tissue)))) #分组
# "#145779FF" "#8A04D0FF" "#467F08FF" "#B6D028FF"
# "#A008CAFF" "#CD590FFF" "#DF83D8FF" "#DFC5FBFF"
rep_colors<-rand_color(length(names(table(sce$orig.ident))))

###plot and save figures

plot_circlize(circ_data,do.label = T, pt.size = 0.02,
              col.use = cluster_colors ,bg.color = '#f9f9f9e5', #'#f8f2e4'
              kde2d.n = 200, repel = T, label.cex = 1.2)

add_track(circ_data, group = "Tissue", colors = group_colors, track_num = 2) 

add_track(circ_data, group = "orig.ident",colors = rep_colors, track_num = 3) 

# 修改plot_circlize.R脚本可以达到修改字体大小，以及对tsne进行画图，默认是umap

# 对tsne结果进行可视化





